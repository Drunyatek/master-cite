<!DOCTYPE HTML>
<html>
<head>
  <meta http&ndash;equiv="Content&ndash;Type" content="text/html; charset=windows&ndash;1251">
  <title>Abstract&mdash;Research of methods for creating algorithms for the synthesis of programs based on the hardware description languages in CAD systems for computing equipment&mdash;Andrew Khvishuk</title>
  <link rel="stylesheet" type="text/css" href="../css/master_style.css">
</head>

<body lang="en">

	<div id="topblock">
		<div id="langbox">
			<a href="index.htm">Ru</a> &nbsp; 
			<a href="indexu.htm">Ua</a>  
		</div>
		<div id="donntu">
			<a href="http://donntu.org/index.php?lang=eng" target=_blank>DonNTU</a> &nbsp; 
			<a href="http://masters.donntu.org/indexe.htm" target=_blank>Masters' portal</a>
		</div>
	</div>

	<div id="header">
		<div id="photomag">
			<a href="../ivanenko_big.jpg"><img src="../photo.jpg" title="DonNTU Master Ivan Ivanenko" alt="DonNTU Master Ivan Ivanenko" border=0></a>
		</div>
		<div id="headertext">
			<h2 class="hdr">Ivan Ivanenko</h2>
			<h3 class="hdr">Faculty	of computer science and technology (CST)</h3>
			<h3 class="hdr">Department	of computer engineering (CE)</h3>
			<h3 class="hdr">Speciality <q>Computer systems and networks</q></h3>
			<h1 class="hdr">Hardware optimization in logic circuits of control units</h1>
			<h3 class="hdr">Scientific adviser: Ph.D., Professor Petr Petrenko</h3>
		</div>
	</div>

	<div id="middleblock">
	
		<div id="menu">
			<a class="button color" href="../indexe.htm">Resume</a>
			<a class="button colorfix">Abstract</a>
		</div>
	
		<div id="maintext">
		
			<h1>Abstract</h1>
			
			<p style="background&ndash;color: lightsteelblue; color: white; font&ndash;size: 14pt; margin: 0pt 20pt 0pt 20pt; padding: 10pt 10pt 10pt 10pt; text&ndash;indent: 0;">
			This abstract is used as an example, with the permission of <a style="color: white; font&ndash;size: 13pt;" href="http://masters.donntu.org/2011/fknt/tatolov/">Evgeniy Tatolov</a>.<br>
			Original: <a style="color: white; font&ndash;size: 13pt;" href="http://masters.donntu.org/2011/fknt/tatolov/diss/indexe.htm">http://masters.donntu.org/2011/fknt/tatolov/diss/indexe.htm</a></p>
			
			<h2>Содержание</h2>
			<ul class=content>
				<li class=ct1><a href="#p0">Introduction</a>
				<li class=ct1><a href="#p1">1. Theme urgency</a>
				<li class=ct1><a href="#p2">2. Goal and tasks of the research</a>
				<li class=ct1><a href="#p3">3. An approach to the unification of synthesis of Moore FSM on FPGA</a>
				<li class=ct1><a href="#p4">Conclusion</a>
				<li class=ct1><a href="#ref">References</a>
			</ul>
			
			<a name=p0></a>
			<h2>Introduction</h2>
			
			<p> Digital systems are widely used as basic elements of computer technologies, automatics, robotics, manufacturing, transport. 
			Creation of very large&ndash;scale integration circuits (VLSI), building of systems&ndash;on&ndash;chip (SoC), development of field&ndash;programmable gate 
			arrays (FPGAs) and complex programmable logic devices (CPLDs) changed the basis of implementation digital systems and proposed 
			increased requirements to the process of their design, which has led to the widespread using of computer&ndash;aided design (CAD) tools 
			and hardware description languages (HDLs). All this should raise quality of the resultant product, promote in realization of multifold 
			analysis and testing. Besides, new base&ndash;oriented methods of combinational and sequential synthesis of logical circuits were created, 
			the greatest effectiveness from which can be reached in the case of application automation and joint combined using with already known algorithms.</p>
			
			<p>Model of Moore finite state machine (FSM, offered by E. Moore in 1956 and named in his honor), as synchronous sequential circuit, 
			is the part of numerous digital systems and is used in construction of control devices. High complexity of integrated circuits 
			(which is increasing, according to the G. Moore's law) and theoretical basis of automatic calculations make possible the implementation 
			of comprehensive algorithms of processing information. However direct realization of algorithms can lead to inefficient using of 
			crystal's resources and extension of project's cost.</p>
			
			
			<a name=p1></a>
			<h2>1. Theme urgency</h2>
			
			<p>The number of methods of Moore FSM's hardware optimization is known: minimization of the amount of states (state reduction) 
			and their specific encoding (state assignment), using features of target basis and algorithm of functioning, multilevel 
			logic circuit's implementation. Mentioned methods are quite effective, but for getting the most economic FSM's implementation 
			they have to be used jointly.</p>
			
			<p>Master's work is dedicated to the actual scientific task of development a unified approach to the synthesis of Moore FSM, 
			which is directing on hardware amount reduction in resultant device and is including algorithmic, combinatory and circuitry 
			optimizing techniques. FPGAs by Xilinx, which combine functionality, programmability and availability to consumers, 
			are used as the target basis. CAD Xilinx ISE, Verilog HDL and Java SE are applied as tools of the research.</p>
			
			<a name=p2></a>
			<h2>2. Goal and tasks of the research</h2>
			
			<p>Development of an approach to the unification of synthesis Moore FSM, directing on hardware amount reduction in FPGA is the goal of research.</p>
			<p>Main tasks of the research:</p>
			<ol>
				<li>Analysis methods of minimization amount of states in completely and incompletely specified Moore FSM.
				<li>Estimation ways of hardware amount reduction with the help of encoding states of Moore FSM.
				<li>Search and detection characteristics of existing construction methods of logic circuits of Moore FSM and estimation possibilities of their use on FPGA.
				<li>Association of functionally different optimization directions of Moore FSM hardware amount into the unified approach to synthesis and formation recommendations for it's use.
				<li>Design of alternative variants of basic stages of unified Moore FSM synthesis process and estimate of it's efficiency.
			</ol>
			
			<p><span class=itl>Research object</span>: Moore FSM synthesis.</p>
			<p><span class=itl>Research subject</span>: association of hardware amount reduction methods at Moore FSM implementation on FPGA.</p>
			
			<a name=p3></a>
			<h2>3. An approach to the unification of synthesis of Moore FSM on FPGA</h2>
			
			<p>An approach to the unification of synthesis of Moore FSM on FPGA is offered in article&nbsp;<a href="#ref1">1</a>]. It joints several possibilities of
			optimization and is directed on FPGA (fig. 1). Entity of an approach consists in sequential application of algorithmic, combinatory
			and circuitry stages and using FPGA&ndash;oriented tools: CAD and HDLs.</p>
			
			<div class=img>
				<img src="images/unification_process_e.png" width=682 height=589 alt="An approach to the unification of synthesis of Moore FSM">
				<p class=imgcaption>Figure 1 &mdash; An approach to the unification of synthesis of Moore FSM</p>
			</div>
			
			<p>On the first step of algorithmic stage of synthesis, arbitrary Moore FSM specification is led to a uniform type &mdash; state transition
			table. Necessity of leading to a uniform type is caused by possibility of specification Moore FSM with the help of different
			representation forms, such as: graph schemes of algorithm, state diagrams, ASM&ndash;diagrams (ASM &mdash; Algorithmic State Machine)
			[<a href="#ref2">2</a>&ndash;<a href="#ref4">4</a>]. Second step of algorithmic stage consists of minimization of the state transition table. Algorithms of Brzozowski,
			ARNES, SMAS, CHESMIN, SLIM, HSM2, STAMINA, OPTIMIST, BICA, ISM can be used for this&nbsp;<a href="#ref3">3</a>, <a href="#ref5">5</a>&ndash;<a href="#ref16">16</a>].</p>
						
			<p>Combinatory stage is directed on effective encoding of minimized transition table's states and, also, on receiving of hardware&ndash;minimum
			functions of the next state and, at necessity, of output functions of FSM. Considerable influence of states encoding method on
			parameters of resultant logical circuit caused development of various approaches, directed on decreasing of power expenses,
			high&ndash;speed performance, minimization of hardware amount. The last one of these approaches can be used on combinatory stage of
			synthesis with the help of application, adaptation and modification of MUSTANG, MUSE, FEL&ndash;Code, JEDI, NOVA, Two&ndash;Hot Encoding,
			DISA, one&ndash;hot  and positional&ndash;binary states encoding algorithms&nbsp;<a href="#ref17">17</a>&ndash;<a href="#ref37">37</a>].</p>
			
			<p>Circuitry stage of synthesis process assumes using Moore FSM logical circuit's construction methods, directing on reduction of
			hardware amount of target chip. Trivial and multilevel implementations, structures with transformation of objects codes, circuits
			on counters can be carried to these methods&nbsp;<a href="#ref37">37</a>]. Modern digital design is oriented on using HDLs (basically, VHDL and Verilog),
			because of what the second step of circuitry stage is development of HDL program, which describes Moore FSM and is suitable for
			processing of appropriate CAD and immersion into the chip.</p>
			
			<p>The described unified synthesis process can be successfully implemented automatically and assume only user's administrative functions:
			describing of Moore FSM and choosing algorithms and structures, which should be used. Moreover, presented approach can be applied
			to the number of other modern basis (CPLD, ASIC) and define the general direction of optimizing works at synthesis of logic
			sequential circuits.</p>
			
			<p>Five Verilog&ndash;programs, describing given Moore FSM&nbsp;<a href="#ref38">38</a>] (fig. 2) in various ways, were designed for an estimation of unified synthesis
			process application to the exact example:</p>
			
			<div class=img>
				<img src="images/animation.gif" width=594 height=420 alt="State diagram of Moore FSM">
				<p class=imgcaption>
					Figure 2 &mdash; State diagram of Moore FSM<br>(animation: 10 frames, 5 cycles of repeating, 160 kilobytes)<br>
					(<i>x<sub>i</sub></i> &mdash; input signals, <i>y<sub>i</sub></i> &mdash; bites of state code, <i>z<sub>i</sub></i> &mdash; output signals)
				</p>
			</div>
			
			<ol>
				<li>Implementation of not minimized Moore FSM with the help of XST (Xilinx Synthesis Technology) analyzer&nbsp;<a href="#ref39">39</a>] (experiment 1).
				<li>Implementation of minimized Moore FSM with the help of XST (Xilinx Synthesis Technology) analyzer (experiment 2).
				<li>Implementation of minimized Moore FSM on two&mdash;level circuit&nbsp;<a href="#ref40">40</a>] with positional&ndash;binary states encoding. Use of ROM with
				    asynchronous reading&nbsp;<a href="#ref39">39</a>] (experiment 3).
				<li>Implementation of minimized Moore FSM on two&mdash;level circuit with positional&ndash;binary states encoding. Use of ROM with
				    synchronous reading&nbsp;<a href="#ref39">39</a>] and an additional signal of synchronization (experiment 4).
				<li>Implementation of minimized Moore FSM on two&mdash;level circuit with positional&ndash;binary states encoding. Use of ROM with
				    synchronous reading and back front of the main signal of synchronization (experiment 5).
			</ol>
			
			<p>All researches were held with the help of CAD Xilinx ISE 13.1 for the family of FPGA Xilinx Spartan&ndash;3, namely for the chip XC3S200.
			Results for cumulative hardware amount for five variants of implementation are graphically shown on fig. 3.</p>
			
			<div class=img>
				<img src="images/synthesis_results_e.png" width=545 height=368 alt="Results of experiments">
				<p class=imgcaption>Figure 3 &mdash; Results of experiments</p>
			</div>
			
			<p>If the goal of optimization is amount of LUT&ndash;cells, the best result has been received at use of two&mdash;level implementation of minimized
			Moore FSM with synchronous ROM and two signals of synchronization (experiment 4). In comparison with experiment 1, number of slices
			has decreased in 3 times, number of flip&ndash;flops &mdash; in 1,5 times, number of LUT&ndash;cells &mdash; in 2,5 times. However in this case has increased
			the total of circuit's outputs, number of synchronization signals and one RAM (Random Access Memory) module has been involved.</p>	
			      
			<a name=p4></a>
			<h2>Conclusion</h2>
			<p>Qualitative synthesis of digital systems, and Moore automata in particular, is one of the areas of logic design, 
			and is not only theoretical research but also of practical interest. Development of optimal digital devices opens the way for 
			more efficient use of capacity basis the implementation of <q>compaction</q> of projects, reduce material costs.</p>
			
			<p>Master's work is devoted to actual scientific problem of combining the basic methods of minimizing the instrumental Moore automata. In the trials carried out:</p>
			<ol>
				<li>The structure of a unified process for the synthesis of Moore automata and defines the functions of its components.
				<li>Based on analysis of the literature highlights the main algorithms that can be used in the proposed approach to the unification of the synthesis of Moore automata.
				<li>A number of experiments on the use of a unified process for the synthesis of Moore automata, analyzed the results.
				<li>The possibilities of integrated automation of the developed approach to the unification of the synthesis of Moore automata are estimated requirements for the software by searching for functionally similar software synthesis of sequential logic circuits.
			</ol>

			<p>Further studies focused on the following aspects:</p>
			<ol>
				<li>Qualitative improvement of the proposed approach to the unification of the synthesis of Moore automata, its complement and expand.
				<li>Delimitation of the effectiveness of different variants of the basic stages of a unified process for the synthesis of Moore automata.
				<li>Adaptation of known methods of constructing the logic of Moore automata to the base FPGA.
				<li>Develop cross&ndash;platform functionality and computer&ndash;aided design of Moore automata (CAD) software that implements the proposed unified process synthesis.
			</ol>

			<p>This master's work is not completed yet. Final completion: December 2011. 
			The full text of the work and materials on the topic can be obtained from the author or his head after this date.</p>
			
			<a name=ref></a>
			<h2>References</h2>
			
		
		</div> <!--  maintext -->
	
	</div> <!-- middleblock -->

	<div id="menub">
		<a class="mitemb" href="../indexe.htm">Resume</a>
	</div>

</body>
</html>
