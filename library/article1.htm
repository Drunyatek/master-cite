<!DOCTYPE HTML>
<html>
  <head>
    <title>Хвищук&nbsp;А.Ю., Григорьев&nbsp;А.В. - Современные средства генерирования VHDL описаний аппаратуры при проектировании программируемых схем FPGA</title>
    <meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
    <link rel="stylesheet" type="text/css" href="../css/master_style.css">    

  </head>
<body lang=ru >
<div class="container article">        
<a href="index.htm">Назад в библиотеку</a>
<br>
<hr>

<h1>Современные средства генерирования VHDL описаний аппаратуры при проектировании программируемых схем FPGA</h1>
<p style="text-indent: 0pt;"><b>Автор:</b> Хвищук&nbsp;А.Ю., Григорьев&nbsp;А.В.<br>
<b>Источник:</b> Микроелектроника и информатика &mdash; 2018. 25&ndash;я Всеросийская межвузовская научно&ndash;техническая конференция студентов и аспирантов: тезисы докладов. &mdash; М.:МИЭТ, 2018. &mdash; 316 с.</p>

                  
<div style="text-align: left;">

<h3>Аннотация</h3>
<p style="text-indent: 0pt; margin-left: 20pt;"><b><i>Хвищук&nbsp;А.Ю., Григорьев&nbsp;А.В. Современные средства генерирования VHDL описаний аппаратуры при проектировании программируемых схем FPGA.</b> В тексте данной статьи представлен краткий обзор методов проектирования интегральных схем по технологии FPGA, а также средства автоматизации процесса проектирования в существующих программных комплексах.</i></p>

<h3>Annotation</h3>
<p style="text-indent: 0pt; margin-left: 20pt;"><i><b>Khvishchuk A.Yu., Grigoriev A.V. Methods and tools for designing integrated circuits using FPGA technology.</b> The text of this article provides a brief overview of the methods for designing integrated circuits using FPGA technology, as well as the means for automating the design process in existing software systems.</i></p>

<h3>Введение</h3>
<p>Сегодня очень быстро развиваются и широко используются интегральные схемы общего назначения или ПЛИС 
  (Программируемая Логическая Интегральная Схема). Область их применения очень обширна: от промышленности 
  и медицины до военной и космической отраслей. Это способствует развитию методик и средств проектирования 
  этих интегральных схем.
</p>
<p>Актуальной задачей является разработка и внедрение средств упрощающих проектирование интегральных 
  схем общего назначения. Существуют различные программные пакеты, позволяющие проектировать ПЛИС, 
  однако для пользования ими проектировщик должен обладать высоким уровнем знаний предметной области.
</p>
<p>Целью данной статьи является анализ технологии FPGA как наиболее яркого представителя интегральных 
  схем общего назначения, сравнение её с аналогичными технологиями, а также анализ и сравнение САПР для проектирования FPGA.
</p>

<h3>1 Технология FPGA</h3>
<p>Технология FPGA (англ. Field&ndash;Programable Gate Array) или ППВМ (Программируемая Пользователем Вентильная Матрица) 
  является одной из разновидностей ПЛИС. Всего их существует три вида:
</p>
<ol style="list-style: none;">
  <li>1) PAL (англ. Programmable Array Logic) (в настоящее время практически не используется).</li>
  <li>2) CPLD (англ.  Complex Programmable Logic Device).</li>
  <li>3) FPGA.</li>
</ol>
<p>Если не углубляться в особенности архитектуры (тут, всё таки, есть отличия между ними), 
  то можно сказать, что они отличаются только количеством транзисторов на кристалле. А если 
  углубляться, то основой CPLD является матрица макроячеек, которая, в свою очередь, так же 
  как и FPGA, состоит из логических вентилей. Она выполняет функции более высокого уровня 
  (тригеры, АЛУ и т.п.), поэтому CPLD проще в проектировании конечной схемы. Однако FPGA  
  является более гибкой вследствие того, что проектировщик сам реализует высокоуровневые функции. 
  Он может более эффективно использовать ресурсы схемы, благодаря этому FPGA, обычно, более производительны, чем CPLD.
</p>

<h3>2 Методы разработки ПЛИС по технологии FPGA</h3>
<p>Несмотря на недолгое существование, технология методы проектирования схем по технологии FPGA претерпели несколько этапов своего развития:</p>
<p class="underline">1) Проектирование с помощью RTL&ndash;описания</p>
<p>RTL (или уровень регистровых передач) &mdash; способ разработки синхронных цифровых интегральных 
  схем, при применении которого работа схемы описывается в виде последовательностей логических 
  операций, применяемых к цифровым сигналам (данным) при их передаче от одного регистра к другому 
  (не описывается, из каких электронных компонентов или из каких логических вентилей состоит схема). 
  Такое высокоуровневое описание составляется на одном из языков описания аппаратуры 
  (hardware description language или HDL), например, на языке Verilog или VHDL, после чего 
  специальной программой преобразуется в низкоуровневое описание &mdash; граф логических элементов 
  и проводников; процесс преобразования называется логическим синтезом или синтезом логики. 
  Другие программы по описанию могут проверить правильность работы схемы и соответствие схемы 
  предъявляемым требованиям. Третья программа, используя низкоуровневое описание, может разместить 
  логические элементы и проводники по поверхности схемы или создать прошивку для ПЛИС.
</p>
<p class="underline">2)	Проектирование с помощью IP&ndash;блоков</p>
<p>IP&ndash;блоки или IP&ndash;ядра &mdash; готовые блоки для проектирования микросхем (например, 
  для построения систем на кристалле). Они представляют собой высокоуровневые 
  элементы схемы (такие как сумматоры, шифраторы, элементы для взаимодействия с 
  внешними устройствами и д.т.), которые уже готовы к использованию, в отличие 
  от методики HDL&ndash;проектирования, при которой проектировщик должен сам описывать 
  эти высокоуровневые элементы.
</p>
<p>Различают три основных класса блоков:</p>
<ul>
  <li>программные IP&ndash;блоки &mdash; блоки, специфицированные на языке описания аппаратуры;</li>
  <li>схемотехнические блоки &mdash; блоки, специфицированные на схемотехническом уровне, без привязки к конкретной топологической реализации;</li>
  <li>физические блоки &mdash; блоки, специфицированные на физическом уровне реализации СБИС.</li>
</ul>
<p>Также под IP&ndash;Core понимают специализированные области кристалла, выделенные для 
  определённых функций. В этих областях реализованы блоки неизменной структуры, 
  спроектированные по методологии ASIC, оптимизированные для заданной функции и не 
  имеющие средств её программирования. В случае использования данного вида ядер размер 
  площади, используемой на кристалле, сокращается, улучшаются характеристики 
  быстродействия, но происходит потеря универсальности.
</p>

<p class="underline">3)	Высокоуровневое проектирование или High Level Systhesis</p>
<p>В обеих системах моделирования все элементы представлены блоками. На их базе в системах моделирования была построена схема (рис. 1, 2).</p>
<p>Данный пункт можно разделить на два меньших, которые отличаются средствами проектирования схем:</p>
<ol style="list-style: none;">
  <li>a.	Проектирование с помощью MATLAB и Simulink</li>
  <p>Ведущие производители FPGA предлагают средства автоматизации 
    создания VHDL/Verilog описания схем, используя мощь и простоту 
    разработки в Matlab. Это System Generator for DSP от компании Xilinx и DSP Builder от Intel.
  </p>
  <li>b.	Проектирование FPGA с помощью C/C++</li>
  <p>Аналогично использованию Matlab, производители FPGA предлагают для автоматизации 
    создания VHDL/Verilog описания использовать очень распространённые языки программирования 
    C и C++. Программные пакеты, предназначенные для этого: Vivado High&ndash;Level Synthesis от 
    Xilinx и HLS Compiler от Intel. Этот метод не позволяет синтезировать схемы со сложной 
    или асинхронной логикой, но при проектирования простых схем позволяет существенно сократить время разработки.
  </p>
</ol> 


<h3>Выводы</h3>
<p>Описанные выше средства автоматизации разработки ПЛИС позволяют сократить 
  время от момента задумки схемы до её фактической реализации. Они берут на себя 
  часть трудозатратных работ, таких как трассировка и синтез схемы. Но для работы 
  с любым из пакетов, которые сейчас существуют на рынке, проектировщик по&ndash;прежнему 
  должен обладать высоким уровнем знаний предметной области. Кроме того, для ведущих 
  компаний в сфере проектирования вычислительной техники (и не только для них) имеет 
  место проблема: <q>Как сохранить знания и опыт сотрудников?</q> и, более того: <q>Как извлечь из этого практическую пользу?</q>. 
</p>
<p>В связи с этим возникает следующая задача: создание базы знаний проектирования ПЛИС. 
  База знаний, на данный момент, является самым современным и технологичным решением в 
  области хранения данных. Она позволит не только сохранить накопленный годами опыт сотрудников, 
  но и сможет применить его для синтеза новых продуктов.
</p>
<p>Способы создания, обучения базы знаний, а также методы обработки и вывода данных из неё станут темами следующих статей.</p>


<a name='lib'></a>
<h3>Список использованной литературы</h3>
<p style="text-indent: 0pt;"> 1. Григорьев&nbsp;А.В. Интеллектуализация процесса проектирования аппаратуры средствами языка VHDL / А.В.&nbsp;Григорьев, Д.А.&nbsp;Кошелева // Наук. працi ДонНТУ. Серия: ІКОТ. &mdash; 2006. &mdash; Вып. 93. &mdash; С. 99&ndash;105.<br>
2. Григорьев&nbsp;А.В. Перспективные направления решения задачи синтеза HDL&ndash;программ в САПР РЭА / А.В.&nbsp;Григорьев, Д.А.&nbsp;Грищенко // Сборник трудов XI международной научной конференции им. Т.А. Таран. &mdash; К., 2011. &mdash; С. 75&ndash;81.<br>
3. ПЛИС [электронный ресурс] – Режим доступа: <a href="https://ru.wikipedia.org/wiki/ПЛИС" target="_blank">https://ru.wikipedia.org/wiki/ПЛИС</a><br>
4. Вентильная матрица [электронный ресурс] – Режим доступа:<br><a href="https://ru.wikipedia.org/wiki/Программируемая_пользователем_вентильная_матрица" target="_blank">https://ru.wikipedia.org/wiki/Программируемая_пользователем_вентильная_матрица</a><br>
5. CPLD [электронный ресурс] – Режим доступа: <a href="https://ru.wikipedia.org/wiki/CPLD" target="_blank">https://ru.wikipedia.org/wiki/CPLD</a><br>
6. САПР Xilinx [электронный ресурс] – Режим доступа: <a href="http://www.fpga-cpld.ru/sapr1.html" target="_blank">http://www.fpga-cpld.ru/sapr1.html</a><br>
7. DSP Builder [электронный ресурс] – Режим доступа: <a href="https://habrahabr.ru/post/238821/" target="_blank">https://habrahabr.ru/post/238821/</a><br>
8. Архитектура ПЛИС [электронный ресурс] – Режим доступа: <a href="https://marsohod.org/11-blog/265-fpga" target="_blank">https://marsohod.org/11-blog/265-fpga</a><br>
9. Quartus II Introduction Using VHDL Design. Altera Corporation. – 2008. – Режим доступа: <a href="http://people.ee.duke.edu/~dwyer/courses/ece52/tut_quartus_intro_vhdl.pdf" target="_blank">http://people.ee.duke.edu/~dwyer/courses/ece52/tut_quartus_intro_vhdl.pdf</a>
</p>
</div>
</div>      
</body>